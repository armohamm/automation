---

- name: Make sure that our old Cloudant package list has been removed
  file: path=/etc/apt/sources.list.d/cloudant.list state=absent
  tags:
    - packages
    - database

- name: Ensure that runit is installed
  apt: name=runit state=present
  tags:
    - packages
    - database

- name: Figure out if the Spidermonkey package has to be downloaded
  stat: path=/var/tmp/libmozjs185-cloudant_1.8.5-cloudant1_amd64.deb
  register: libmozjs_deb
  tags:
    - packages
    - database

- name: Figure out if the BigCouch package has to be downloaded
  stat: path=/var/tmp/bigcouch_0.4.2-1_amd64.deb
  register: bigcouch_deb
  tags:
    - packages
    - database

- name: "Download Spidermonkey package, if necessary"
  get_url: >-
    url="https://s3.amazonaws.com/dpla-automation-download/libmozjs185-cloudant_1.8.5-cloudant1_amd64.deb"
    dest="/var/tmp/libmozjs185-cloudant_1.8.5-cloudant1_amd64.deb"
    sha256sum=fa874ac83136e26a0596066e05f143c0548a11bbf7f928e3b9c97ce129336e9f
  when: not libmozjs_deb.stat.exists
  tags:
    - packages
    - database

- name: "Download bigcouch package, if necessary"
  get_url: >-
    url="https://s3.amazonaws.com/dpla-automation-download/bigcouch_0.4.2-1_amd64.deb"
    dest="/var/tmp/bigcouch_0.4.2-1_amd64.deb"
    sha256sum=f15bb3a3ebc7e5b62a9d54b7965f569670b2ee03c3c026055bee7f3b82c41d2d
  when: not bigcouch_deb.stat.exists
  tags:
    - packages
    - database

- name: Ensure installation of Spidermonkey javascript engine
  apt: deb=/var/tmp/libmozjs185-cloudant_1.8.5-cloudant1_amd64.deb
  tags:
    - packages
    - database

- name: Ensure installation of BigCouch
  apt: deb=/var/tmp/bigcouch_0.4.2-1_amd64.deb
  tags:
    - packages
    - database

- name: Update bigcouch local.ini file
  template: src=local.ini.j2 dest=/opt/bigcouch/etc/local.ini
  notify:
    - restart bigcouch
  tags:
   - database

- name: Update bigcouch VM args file
  template: src=vm.args.erb.j2 dest=/opt/bigcouch/etc/vm.args
  notify:
    - restart bigcouch
  tags:
   - database

- meta: flush_handlers

- name: Add nodes to cluster (all hosts belong to one cluster)
  # This is the typical case.  There is a group of BigCouch nodes and you want
  # each node in the inventory file added to the cluster.
  uri: >-
      url="http://{{ inventory_hostname }}:5986/nodes/{{ dbnode_id_name }}@{{ item }}"
      method=PUT body="{}" status_code="201,409"
  with_items: groups['dbnodes']
  when: dbnode_inventory_hosts_are_nodes
  tags:
    - database

- name: "Add nodes to cluster (multiple inventory hosts, multiple clusters)"
  # This is a special case where there could be multiple QA hosts, but each one
  # only has a single BigCouch node and you don't want them talking to each
  # other, even though there are multiple dbnodes in the inventory.
  uri: >-
      url="http://{{ inventory_hostname }}:5986/nodes/{{ dbnode_id_name }}@{{ inventory_hostname }}"
      method=PUT body="{}" status_code="201,409"
  when: not dbnode_inventory_hosts_are_nodes
  tags:
    - database

- name: Add logrotate task for bigcouch
  copy: src=etc_logrotate_d_bigcouch dest=/etc/logrotate.d/bigcouch owner=root group=root mode=0644
  tags:
    - database
    - logrotate

